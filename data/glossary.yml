# A collection of commonly used terms.
#
# Please add new terms in alphabetical order.

## Structure
## ```typescript
## type Term {
##   // Slugified word. Must be unique. Assigned to `slugify(term)` if unspecified.
##   id: string;
##   // The term in our glossary
##   term: string;
##   // Description of the term in Markdown. Converted to HTML during build.
##   description?: string;
##   // Optional acronym form.
##   acronym?: string;
##   // Optional path to a page in our docs. The title will be set automatically.
##   see?: string;
##   // List of external links
##   links?: {title: string; url: string}[];
## }
## ```

## Example
## ```yaml
## - term: Test Driven Development
##   description: A software development process ...
##   acronym: TDD
##   see: /path/to/a-page/
##   links:
##     - title: Test-driven Development (Wikipedia)
##       url: https://en.wikipedia.org/wiki/Test-driven_development
## ```

- term: Abandoned kata
  description: |
    Kata whose the author is not active anymore.

- term: Active (author)
  description: Author who has been connected to Codewars during the last 30 days.

- term: Allies
  description: Users who are following each others, or who are part of the same clan.

- term: Approve (a kata, a translation)
  description: |
    Action to push a kata out of the beta process, giving it a rank (kyus). This can be done by power users.
    For a translation, consists to validate it a make the language available in the kata for all users.

- term: Attempt
  description: |
    In the trainer, when you click on the `ATTEMPT` button, you run your code against the full test suite (see "test cases"). Validating all the tests makes you pass/validate the kata, and grants you honor points and progress.

- term: Author
  description: User who created a kata (either an approved one or one still in beta).

- term: Beta (kata/process)
  description: The beta process is the phase where a kata is visible to any other user in the database/[katas search page](https://www.codewars.com/kata/my-languages) but does not have a rank yet. It is to be tested by other users, so that it can be enhanced, modified, ranked and finally approved... or retired if not qualitative enough.

- term: Clan(s)
  description: |
    You can write the name of your clan/company/organization through your `profile/account settings` page. All the members of this clan are automatically recognized as allies of yours, hence are added to your personnal leaderboard in the dashboard.
  links:
    - title: Dashboard leaderboard
      url: https://www.codewars.com/dashboard

- term: Collections(s)
  description: |
    Collections are sets or libraries of katas that any user can create, for any purpose. All collections are public.
  links:
    - title: Collections created by one user
      url: https://www.codewars.com/users/Blind4Basics/authored_collections
    - title: Browse through all collections
      url: https://www.codewars.com/collections

- term: Console
  description: Synonym for "output panel" (see below).

- term: Contributor(s)
  description: User(s) who have either authored, approved, translated or modified a kata in any way (a list of them can be seen in the "Details" page of any kata.

- term: Dan
  description: 段
  links:
    - title: Dan (rank) - Wikipedia
      url: https://en.wikipedia.org/wiki/Dan_(rank)

- term: Dashboard
  description: This is the main page for a code warrior. You land there by clicking on the picture in the top left vertical bar (Codewars' logo). It contains kata suggestions, a leaderboard of you and your allies and a flow of the last comments posted anywhere on Codewars.
  links:
    - title: Codewars Dashboard
      url: https://www.codewars.com/dashboard

- term: Draft (kata)
  description: |
    Initial state of a new born kata: when you create a new kata, it is in Draft mode as long as it is not "published". Katas in draft state are not visible through the [katas search page](https://www.codewars.com/kata/my-languages), but can be accessed and tried by other users if the author gives them the direct link to the trainer. Note that a kata in draft state cannot be completed (eg. "submit final" will not show up if you pass all the tests of a draft).

- term: Edit panel
  description: |
    This is the interface an author uses to create or modify a kata. There you can see all the available languages, author's solution, initial solution, all the tests, the preloaded version and the description. Contributors and some power users (in specific conditions) have access to the edit panel of published katas.
    Notes:
      * Entering the edit panel is an automatic forfeit of the kata for the user going there.
      * Translating a kata has to be done through the creation of a translation, and ___never___ directly through the edit panel (unless you're the author, but even then, you are advise to use translations)

- term: Example tests
  description: |
    Tests that are visible to the user in the trainer. Most of the time, they are only a tiny part of the full tests suite. Hence, passing all the tests of the example tests doesn't make you pass the kata. You have to use `ATTEMPT`.
    You run the example tests using the `TEST` button in the trainer.

- term: Fixed tests
  description: |
    Tests whose input and output are always the same, each time your run the tests. Generally, the example tests are made of those, and the test cases contains both fixed and random tests.

- term: Followers
  description: |
    Users who are following other users.
    You can follow an user by clicking on the `Follow` button in his profile or by making yourself part of the same clan.
    You can see in the `Social` section of the profile of a user who he is following, who are his followers and who he is ally with.

- term: Forfeit (a kata)
  description: |
    You forfeit a kata when you do one of those actions:
      * You unlock the solutions (through the button in the trainer, for example)
      * You enter the edit panel (_warning_, power users may have the possibility to enter the edit panel of some katas. If you do so before you solved it, you actually forfeit it).
    Forfeiting a kata makes you lose the opportunity to gain honor points or progress by completing this kata.

- term: Fork
  description: |
    In the solutions page of a kata, you can see the solutions of other users, and you can `fork` them to suggest modifications/enhancements (button below each solution).
    Using the fork panel is the right way to try out a solution of another user, rather than to copy it in the trainer of the kata.

- term: Honor (points)
  description: |
    Honor points are the score that is showing up in the top right corner, aside of your avatar. You can win honor points in different ways (completing katas, up votes on your comments or solutions, translations, creating katas, ...)

- term: Inactive (author)
  description: |
    Author of a kata who hasn't been connected for more than 30 days. When an author is inactive, some actions he's normally the only person allowed to do are doable by other people (power users with the required privilegees).

- term: Initial solution
  description: |
    This is the starting point of your code when you enter the trainer of a kata (the "Solution" box).

- term: Issue (comment)
  description: |
    `Issue` is the label to use when you write a comment in the discourses section of a kata to point out some problems in the kata itself (wrong tests, wrong reference solution, wrong description, missing tests, misleading description, ...).
    Note that the `Issue` label is ___NOT___ to use for a user who doesn't understand why his solution is failing some (or all) the tests of the kata.

- term: Kata
  description: 型
  links:
    - title: CodeKata by Dave Thomas
      url: http://codekata.com/kata/codekata-intro/
    - title: Kata (programming) - Wikipedia
      url: https://en.wikipedia.org/wiki/Kata_(programming)
    - title: Kata - Wikipedia
      url: https://en.wikipedia.org/wiki/Kata

- term: Kumite
  description: 組手
  links:
    - title: Kumite - Wikipedia
      url: https://en.wikipedia.org/wiki/Kumite

- term: Kyū
  description: 級
  links:
    - title: Kyū - Wikipedia
      url: https://en.wikipedia.org/wiki/Ky%C5%AB

- term: Language versions
  description: |
    A kata may be available in one or more languages (javascript, python, coq, ...), and for each language there may be different versions like Node 8 or Node 10 for JS, python 3.4.3 or 3.6, ... You can choose the language _and_ the language version in the trainer of a kata (amongst the available ones only).

- term: Leaderboards
  description: Leaderboards are grouping different users according to different criteria.
  links:
    - title: Overall top 500
      url: https://www.codewars.com/users/leaderboard
    - title: Top 500 by completed Katas
      url: https://www.codewars.com/users/leaderboard/kata
    - title: Top 500 by authored Katas and translations
      url: https://www.codewars.com/users/leaderboard/authored
    - title: Your personnal leaderboard (with your allies, in the dashboard)
      url: https://www.codewars.com/dashboard

- term: Markdowns (formatting)
  description: |
    Codewars is responsive to `markdowns`. They allow you to format code, descriptions or comments so that thay are properly readable for other users.

- term: Merge conflicts
  description: |
    When a translation of a kata is published but some changes are done to the description (through the edit panel) before the translation gets approved, it becomes impossible to approve it because of those "merge conflicts".
    To resolve this problem, you have to fork the translation and update the description starting with its current (new) version.

- term: Mutation of the input
  description: |
    To keep it short...: ___Don't mutate the input... Ever___ (eg. don't use sort, append, push, remove, ... and alike before doing a copy of the input).
    This is about side effects, modifying the arguments (typically lists/arrays, or even strings if they are mutable in your language) sent to your function during the executions. This can have weird consequences, depending on how the tests are written.
    Nowadays, most test suites are written in a way that avoids this kind of problem but typically, if you end up passing the fixed tests but failing all the random tests with something along the line of `[your result] should equal []`, you're most likely facing a "mutation of the input" problem.
    Hence... Don't mutate the input.

- term: Preloaded (code/section)
  description: |
    In a Kata, the preloaded section is code that is executed _before_ the solution of the user is defined. The code hold by this section isn't visible to the user but every function or variable defined there is accessible to him drugint the executions of his code.
    If you need/want to see the preloaded section of a Kata, open a fork of a solution _after_ you solved it and look to the `Preloaded` panel.

- term: Progress
  description: |
    Aside of honor points, you gain "progress" by completing Katas (and only that way). Progess is what is conditioning your current rank as a codewarrior.

- term: Publishing (kata)
  description: When you hit "publish" in the edit panel of a kata you created, it enters the beta process and becomes visible to anyone in the [katas search page](https://www.codewars.com/kata/my-languages). The beta process begins at the moment a kata is published.

- term: Question (comment)
  description: |
    `Question` is the label to use when you write a comment in the discourses section of a kata when you encounter some problems to solve it and you don't understand why your solution is failing some (or all) the tests. Or if you ___believe___ your solution is correct while the expected result isn't.
    Most of the times, the user (you) is actually missing something, so use the Question label and not the Issue label, unless you can ___prove___ that the problem you're facing is actually an "issue".

- term: Test Driven Development
  description: |
    Katas are built following this principle: you are provided with specifications and a set of tests, and your goal is to pass those tests (by following the specifications or finding a way to at least pass the tests).
  acronym: TDD
  links:
    - title: Test-driven Development - Wikipedia
      url: https://en.wikipedia.org/wiki/Test-driven_development

- term: Trainer (kata)
  description: |
    This is the place where you write your code to complete a task.

- term: Translator
  description: |
    User who translated an existing kata to a new language, making it available for other users.
